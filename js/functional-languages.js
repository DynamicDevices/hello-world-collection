// Functional Programming Languages
var functionalLanguages = [
    {name: "Haskell", year: 1990, creator: "Committee", code: "main = putStrLn \"Hello, World!\"", desc: "Haskell is a standardised, purely functional programming language with lazy evaluation and strong static typing. Named after logician Haskell Curry, it was developed by a committee of researchers.", popularity: 48},
    {name: "Clojure", year: 2007, creator: "Rich Hickey", code: "(println \"Hello, World!\")", desc: "Clojure is a dynamic, general-purpose programming language that combines the approachability of a scripting language with an efficient infrastructure for multithreaded programming. Created by Rich Hickey.", popularity: 45},
    {name: "Erlang", year: 1986, creator: "Joe Armstrong", code: "-module(hello).\n-export([start/0]).\n\nstart() ->\n    io:format(\"Hello, World!~n\").", desc: "Erlang is a programming language designed for building massively scalable soft real-time systems with requirements for high availability. Developed by Joe Armstrong at Ericsson.", popularity: 40},
    {name: "Elixir", year: 2011, creator: "José Valim", code: "IO.puts \"Hello, World!\"", desc: "Elixir is a dynamic, functional language designed for building maintainable and scalable applications. Created by José Valim, Elixir leverages the Erlang Virtual Machine.", popularity: 38},
    {name: "F#", year: 2005, creator: "Don Syme", code: "printfn \"Hello, World!\"", desc: "F# is a functional-first programming language that makes it easy to write correct and maintainable code. Developed by Don Syme at Microsoft Research as part of the .NET ecosystem.", popularity: 42},
    {name: "OCaml", year: 1996, creator: "Xavier Leroy", code: "print_endline \"Hello, World!\";;", desc: "OCaml is an industrial-strength programming language supporting functional, imperative, and object-oriented styles. Developed by Xavier Leroy and others at INRIA.", popularity: 35},
    {name: "Lisp", year: 1958, creator: "John McCarthy", code: "(format t \"Hello, World!~%\")", desc: "Lisp is one of the oldest high-level programming languages, created by John McCarthy at MIT in 1958. Originally developed for artificial intelligence research.", popularity: 25},
    {name: "Scheme", year: 1975, creator: "Guy Steele", code: "(display \"Hello, World!\")\n(newline)", desc: "Scheme is a minimalist dialect of Lisp developed by Guy Lewis Steele Jr. and Gerald Jay Sussman at MIT in the 1970s. Known for its elegant simplicity and mathematical foundations.", popularity: 15},
    {name: "ML", year: 1973, creator: "Robin Milner", code: "print \"Hello, World!\\n\";", desc: "ML (Meta Language) is a functional programming language developed by Robin Milner and others at the University of Edinburgh in the early 1970s.", popularity: 12},
    {name: "Miranda", year: 1985, creator: "David Turner", code: "main = [Stdout \"Hello, World!\\n\"]", desc: "Miranda is a purely functional programming language designed by David Turner. It influenced the development of Haskell and features lazy evaluation, strong typing, and a clean mathematical syntax for functional programming.", popularity: 8},
    {name: "Clean", year: 1987, creator: "Rinus Plasmeijer", code: "module hello\n\nimport StdEnv\n\nStart = \"Hello, World!\"", desc: "Clean is a purely functional programming language developed by Rinus Plasmeijer at Radboud University. It features uniqueness typing for efficient memory management and is designed for developing real-world applications with functional programming.", popularity: 6},
    {name: "Idris", year: 2007, creator: "Edwin Brady", code: "main : IO ()\nmain = putStrLn \"Hello, World!\"", desc: "Idris is a purely functional programming language with dependent types, designed for type-driven development. Created by Edwin Brady, it allows expressing precise program specifications in types and proving program correctness.", popularity: 18},
    {name: "Racket", year: 1995, creator: "PLT Inc.", code: "#lang racket\n(displayln \"Hello, World!\")", desc: "Racket is a general-purpose programming language and an ecosystem for language-oriented programming. Originally developed as PLT Scheme, it emphasises language extensibility and creating domain-specific languages.", popularity: 22},
    {name: "Hy", year: 2013, creator: "Paul Tagliamonte", code: "(print \"Hello, World!\")", desc: "Hy is a Lisp dialect that compiles to Python's abstract syntax tree. Created by Paul Tagliamonte, it allows developers to write Python programs using Lisp syntax whilst maintaining full access to Python libraries.", popularity: 14},
    {name: "Red", year: 2011, creator: "Nenad Rakocevic", code: "print \"Hello, World!\"", desc: "Red is a programming language inspired by Rebol, designed to be a full-stack language for systems programming to scripting. Created by Nenad Rakocevic, it features a compact syntax and aims to reduce software complexity.", popularity: 12},
    {name: "Fennel", year: 2016, creator: "Phil Hagelberg", code: "(print \"Hello, World!\")", desc: "Fennel is a Lisp that compiles to Lua, combining the elegance of Lisp syntax with Lua's simplicity and performance. Created by Phil Hagelberg, it's designed for scripting and embedding in applications that use Lua.", popularity: 10}
];