// Systems Programming Languages
var systemsLanguages = [
    {name: "Assembly x86", year: 1949, creator: "Various", code: ".section .data\n    hello: .ascii \"Hello, World!\\n\"\n.section .text\n    .global _start\n_start:\n    mov $4, %eax\n    mov $1, %ebx\n    mov $hello, %ecx\n    int $0x80", desc: "Assembly language provides a human-readable representation of machine code instructions specific to the x86 processor architecture that has dominated personal computing.", popularity: 45},
    {name: "Zig", year: 2016, creator: "Andrew Kelley", code: "const std = @import(\"std\");\n\npub fn main() !void {\n    const stdout = std.io.getStdOut().writer();\n    try stdout.print(\"Hello, World!\\n\");\n}", desc: "Zig is a general-purpose programming language and toolchain for maintaining robust, optimal, and reusable software. Created by Andrew Kelley.", popularity: 25},
    {name: "D", year: 2001, creator: "Walter Bright", code: "import std.stdio;\n\nvoid main() {\n    writeln(\"Hello, World!\");\n}", desc: "D is a general-purpose programming language with static typing, systems-level access, and C-like syntax. Developed by Walter Bright.", popularity: 20},
    {name: "Nim", year: 2008, creator: "Andreas Rumpf", code: "echo \"Hello, World!\"", desc: "Nim is a statically typed compiled systems programming language that combines successful concepts from mature languages like Python, Ada, and Modula.", popularity: 15},
    {name: "Crystal", year: 2014, creator: "Ary Borenszweig", code: "puts \"Hello, World!\"", desc: "Crystal is a general-purpose, object-oriented programming language designed by Ary Borenszweig with syntax heavily inspired by Ruby but with static type checking.", popularity: 18},
    {name: "V", year: 2019, creator: "Alexander Medvednikov", code: "fn main() {\n    println('Hello, World!')\n}", desc: "V is a simple, fast, safe, compiled programming language designed for developing maintainable software. Created by Alexander Medvednikov.", popularity: 12},
    {name: "Odin", year: 2016, creator: "Ginger Bill", code: "package main\n\nimport \"core:fmt\"\n\nmain :: proc() {\n    fmt.println(\"Hello, World!\")\n}", desc: "Odin is a general-purpose programming language designed as an alternative to C with modern features and better ergonomics. Created by Ginger Bill.", popularity: 20},
    {name: "JAI", year: 2014, creator: "Jonathan Blow", code: "#import \"Basic\";\n\nmain :: () {\n    print(\"Hello, World!\\n\");\n}", desc: "JAI is a programming language designed by Jonathan Blow for high-performance programming, particularly game development. Still in development, aims to provide control of C with modern features.", popularity: 16},
    {name: "Carbon", year: 2022, creator: "Google", code: "package Sample api;\n\nfn Main() -> i32 {\n    Print(\"Hello, World!\");\n    return 0;\n}", desc: "Carbon is an experimental programming language being developed by Google as a potential successor to C++. Designed to provide smooth interoperability with existing C++ code.", popularity: 30},
    {name: "Mojo", year: 2023, creator: "Chris Lattner", code: "fn main():\n    print(\"Hello, World!\")", desc: "Mojo is a new programming language designed for AI development that combines Python's usability with C's performance. Created by Chris Lattner at Modular, it aims to be a superset of Python with systems programming capabilities.", popularity: 28}
];